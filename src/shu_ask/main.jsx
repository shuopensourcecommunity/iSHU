'use strict';const Home = require('./Home.jsx');const Login = require('./Login.jsx');const NotFound = require('./NotFound.jsx');const About = require('./About.jsx');const QuestionAnswer = require('./QuestionAnswer.jsx')const AskAnsInfo = require('./AskAnsInfo.jsx');const React = require('react');const {render} = require('react-dom');const {Router, Route, Link, History, Lifecycle} = require('react-router');// using jQueryfunction getCookie(name) {  var cookieValue = null;  if (document.cookie && document.cookie != '') {    var cookies = document.cookie.split(';');      for (var i = 0; i < cookies.length; i++) {        var cookie = jQuery.trim(cookies[i]);          // Does this cookie string begin with the name we want?          if (cookie.substring(0, name.length + 1) == (name + '=')) {            cookieValue = decodeURIComponent(cookie.substring(name.length + 1));            break;          }        }    }    return cookieValue;}function csrfSafeMethod(method) {    // these HTTP methods do not require CSRF protection    return (/^(GET|HEAD|OPTIONS|TRACE)$/.test(method));}$.ajaxSetup({  beforeSend: function(xhr, settings) {    if (!csrfSafeMethod(settings.type) && !this.crossDomain) {      xhr.setRequestHeader("X-CSRFToken", getCookie('csrftoken'));    }  }});render((  <Router>    <Route path="/" component={Home} />    <Route path="/category/:id" component={Home} />    <Route path="login" component={Login} />    <Route path="about" component={About} />    <Route path="question" component={QuestionAnswer.Question} />    <Route path="answer/:id" component={QuestionAnswer.Answer} />    <Route path="askAnsInfo/:id" component={AskAnsInfo} />    <Route path="*" component={NotFound} />  </Router>), document.getElementById('app-container'))